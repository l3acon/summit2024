---
- name: Install nginx
  ansilb.builtin.dnf: 
    name: nginx
    state: present
  notify: restart nginx

- name: Create site directory
  ansible.builtin.file:
    path: /var/www/
    state: directory
    recurse: true
  notify: restart nginx

- name: Untar archive
  ansible.builtin.unarchive:
    src: site.tar.gz
    dest: /var/www/
  register: unarchive

- name: manage files in /var/www/
  community.general.sefcontext:
    target: '/var/www/html(/.*)?'
    setype: httpd_sys_content_t
    state: present

- name: Apply new SELinux file context to filesystem if files were unarchived
  community.general.sefcontext:
    target: /var/www/html(/.*)?
    setype: httpd_sys_content_t
    state: present
  register: context
  when: unarchive.changed

- name: Apply new SELinux file context to filesystem
  ansible.builtin.command: restorecon -irv /var/www/html/
  when: context.changed

- name: Create site directory
  ansible.builtin.copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  notify: restart nginx

- name: Start nginx service
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true

- name: Refresh handlers
  meta: flush_handlers

- name: Wait for webapp to be available
  ansible.builtin.uri:
    url: http://importantapp
  register: result
  until: "result.status == 200"
  retries: 5
  delay: 1
